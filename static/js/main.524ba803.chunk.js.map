{"version":3,"sources":["types/index.ts","Components/Button/Button.tsx","Components/ButtonGrid/ButtonGrid.tsx","utils/index.ts","Components/WeaveDisplay/CustomBlurEffect.js","Components/DimensionsEditor/DimensionsEditor.tsx","Components/ThreadEditor/ThreadEditor.tsx","Components/ThreadButtonGrid/ThreadButtonGrid.tsx","Components/ImageEditor/ImageEditor.tsx","Components/WeaveDisplay/WeaveDisplayMaterial.ts","Components/WeaveDisplay/WeaveDisplayThree.tsx","Components/InfoPanel/InfoPanel.tsx","Components/LoomEditor/LoomEditor.tsx","Components/ToolBarMenu/ToolBarMenu.tsx","Components/ToolBarMenuNode/ToolBarMenuNode.tsx","presets/presetWeavingPatterns.tsx","Components/ToolBar/ToolBar.tsx","Hooks/useLocalStorage.ts","Components/Dialog/Dialog.tsx","Components/ScriptBox/ScriptBox.tsx","Components/ScriptBox/ScriptBoxHelpers.ts","Components/Container/Container.tsx","Components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SubGridType","Orientation","ContainerActionType","LoomActionType","CameraMode","Button","props","style","gridRow","row","gridColumn","col","thread","palette","threadPalette","threadPaletteIndex","color","className","value","onClick","onClickHandler","ButtonGrid","handleButtonClick","e","subGridType","arrayOfButtons","gridValues","map","rowIndex","colIndex","cellSize","gridTemplateRows","length","gridTemplateColumns","width","height","uuidv4","require","v4","cloneDeep","dimensionDefault","harnessCount","treadleCount","warpCount","weftCount","defaultIndexedThreadPalette","createThreadDataSource","selectedIndex","gFromHexString","str","parseInt","substring","bFromHexString","createHarness","threads","Set","createTreadle","harnesses","createThread","id","loomDimensionsFromString","obj","data","threading","tieup","treadling","tieupNumbers","regex","matches","match","s","numbersFromString","split","expandPatternString","Math","max","newStr","replaceAll","_","p1","p2","repeat","endsWith","createUUID","createArray","generatorFunction","Array","fill","createLoomState","dimensions","warpThreads","i","weftThreads","treadles","treadlingInstructions","threadDataSource","name","indexedThreadPalette","convertLoomStateToJSON","state","JSON","stringify","convertLoomPartToJSON","treadle","indexOf","partArr","refArr","indexes","forEach","part","push","harness","createLoomStateFromStringDataRepesentation","loomStateString","reverse","harnessIndex","warpThreadIndex","invertedHarnessIndex","add","treadleConnections","harnessIndexes","treadleIndex","inverseHarnessIndex","treadlingInstructionIndex","_uParam","DimensionsEditor","useState","localDimensions","setLocalDimensions","useEffect","handleChange","preventDefault","target","dimensionsAreUnmodified","useMemo","Object","keys","every","key","formItems","dimensionKey","htmlFor","separator","replace","toLowerCase","display","type","onChange","onSubmit","onDimensionsChange","disabled","ThreadEditor","newThreadDataSource","setNewThreadDataSource","paletteLock","setPaletteLock","threadItems","classes","toString","backgroundColor","onSelectThreadDataSource","onAddThreadDataSource","onSetThreadDataSource","ThreadButtonGrid","buttonOnClickHandler","item","index","styleDataSource","orientation","HORIZONTAL","VERTICAL","ImageEditor","children","fragmentShader","Effect","defaultDataBuffer","Uint8Array","WeaveDisplayMaterial","shaderMaterial","patternDataTexture","DataTexture","THREE","repeats","extend","createPatternDataTexture","buffer","size","patternData","stride","r","g","b","initialPatternDataTexture","Scene","myMesh","useRef","perspectiveCameraRef","setPatternDataTexture","threeState","useThree","warpThreadCount","weftThreadCount","perspectivePlaneWidth","perspectivePlaneHeight","aspect","vFov","atan","PI","colorBuffer","needsUpdate","camera","fov","canvasWidth","unitSize","canvasHeight","enableOrbitControls","cameraMode","Perspective","Orthographic","OrthographicCamera","makeDefault","args","PerspectiveCamera","position","ref","OrbitControls","enablePan","enableZoom","enableRotate","attach","InfoPanel","href","reducer","action","stateCopy","SET_HARNESSTOTHREADATTACHMENTS","harnessID","threadID","has","delete","SET_TREADLETOHARNESSATTACHMENTS","treadleID","SET_TREADLINGINSTRUCTION","instructionIndex","SET_HARNESSCOUNT","unshift","removedHarnesses","splice","SET_TREADLECOUNT","removedTreadles","instruction","removedTreadle","SET_WARPCOUNT","wt","SET_WEFTCOUNT","SET_STATE","SET_WARPTHREADTHREADPALETTEINDEX","warpThreadID","SET_WEFTTHREADTHREADPALETTEINDEX","weftThreadID","SET_SELECTEDTHREADDATASOURCE","dataSource","ADD_THREADDATASOURCE","SET_SELECTEDTHREADDATASOURCEINDEX","dataSourceIndex","Loom","useReducer","dispatch","imageCellSize","setImageCellSize","imageScale","setImageScale","currentState","loomGridOnClickEventHandler","gridCol","HARNESSTOTHREADTABLE","TIEUPTABLE","TREADLINGTABLE","WEFTTHREADTABLE","WARPTHREADTABLE","gl","preserveDrawingBuffer","treadleInstruction","currentWeftThread","activeWarpThreads","currentWarpThread","weaveDisplayColorBuffer","onMouseDown","console","log","onMouseMove","onMouseUp","fromEntries","entries","dimension","isNaN","getValidatedDimensions","verticalAlign","min","defaultValue","selectedThreadDataSourceIndex","newthreadDataSource","threadDataSourceToAdd","ToolBarMenu","ToolBarMenuNode","text","STANDARD_TIEUP","presetPatterns","ToolBar","stateStrings","saveStateToolBarMenuNodes","saveStateDict","stateID","saveStateNames","onLoad","onCreateNew","onSave","onSaveAs","onExportAsPng","stateString","onLoadPreset","presetStateAsToolBarMenuNode","onDimensionChange","useLocalStorage","initialValue","readValue","window","localStorage","getItem","parse","error","warn","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","dispatchEvent","Event","Dialog","ayuDarkModTheme","createTheme","theme","settings","background","foreground","dark","editor","fg","hex","caret","selection","inactive","selectionMatch","active","lineHighlight","line","gutterBackground","gutterForeground","fontFamily","styles","tag","t","comment","bracket","keyword","syntax","number","constant","operator","standard","tagName","string","variableName","entity","function","func","ScriptBox","transformState","initialScript","script","setScript","isActive","setIsActive","delay","setDelay","hidden","setHidden","useCallback","userCode","f","interval","setInterval","clearInterval","lang","extensions","javascript","basicSetup","foldGutter","useStateWithScriptBox","initialState","setState","handleScriptCall","validators","scriptFunction","potentialNewState","editorContext","validator","failedValidators","filter","v","createScriptCallHandler","shiftRight","arr","slice","shiftLeft","Container","setSaveStateDict","setSaveStateNames","initialPreset","filteredPatterns","pattern","getPresetPattern","setCurrentState","handleCurrentStateScriptBox","openDialog","setOpenDialog","currentDialog","setCurrentDialog","liveStateRef","setLiveStateRef","setCameraMode","handleClose","SaveAsDialog","newUUID","stateClone","newName","serilizedState","placeholder","CreateNewDialog","newState","ExportAsPngDialog","downloadLink","document","createElement","rawFileName","fileName","setAttribute","canvas","querySelector","link","toDataURL","click","jsonData","subArr","convertJSONToLoomState","serializedLoomState","newMode","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.524ba803.chunk.js","sourcesContent":["export enum SubGridType {\r\n  WARPTHREADTABLE,\r\n  WEFTTHREADTABLE,\r\n  TIEUPTABLE,\r\n  HARNESSTOTHREADTABLE,\r\n  TREADLINGTABLE\r\n}\r\n\r\nexport enum Orientation {\r\n  VERTICAL,\r\n  HORIZONTAL\r\n}\r\n\r\nexport enum ContainerActionType {\r\n  SET_WARPCOUNT,\r\n  SET_WEFTCOUNT,\r\n  SET_TREADLECOUNT,\r\n  SET_HARNESSCOUNT\r\n}\r\n\r\nexport type ContainerAction =\r\n  | { type: ContainerActionType.SET_WARPCOUNT; warpCount: number; }\r\n  | { type: ContainerActionType.SET_WEFTCOUNT; weftCount: number; }\r\n  | { type: ContainerActionType.SET_TREADLECOUNT; treadleCount: number; }\r\n  | { type: ContainerActionType.SET_HARNESSCOUNT; harnessCount: number; }\r\n\r\nexport enum LoomActionType {\r\n  SET_HARNESSTOTHREADATTACHMENTS,\r\n  SET_TREADLETOHARNESSATTACHMENTS,\r\n  SET_TREADLINGINSTRUCTION,\r\n  SET_HARNESSCOUNT,\r\n  SET_TREADLECOUNT,\r\n  SET_WEFTCOUNT,\r\n  SET_WARPCOUNT,\r\n  SET_STATE,\r\n  SET_WARPTHREADTHREADPALETTEINDEX,\r\n  SET_WEFTTHREADTHREADPALETTEINDEX,\r\n  SET_SELECTEDTHREADDATASOURCEINDEX,\r\n  SET_SELECTEDTHREADDATASOURCE,\r\n  ADD_THREADDATASOURCE\r\n}\r\n\r\nexport type LoomAction =\r\n  | { type: LoomActionType.SET_HARNESSTOTHREADATTACHMENTS; harnessID: number; threadID: number; }\r\n  | { type: LoomActionType.SET_TREADLETOHARNESSATTACHMENTS; treadleID: number; harnessID: number; }\r\n  | { type: LoomActionType.SET_TREADLINGINSTRUCTION; treadleID: number; instructionIndex: number; }\r\n  | { type: LoomActionType.SET_HARNESSCOUNT; harnessCount: number; }\r\n  | { type: LoomActionType.SET_TREADLECOUNT; treadleCount: number; }\r\n  | { type: LoomActionType.SET_WARPCOUNT; warpCount: number; }\r\n  | { type: LoomActionType.SET_WEFTCOUNT; weftCount: number; }\r\n  | { type: LoomActionType.SET_STATE; state: LoomState; }\r\n  | { type: LoomActionType.SET_WARPTHREADTHREADPALETTEINDEX; warpThreadID: number; }\r\n  | { type: LoomActionType.SET_WEFTTHREADTHREADPALETTEINDEX; weftThreadID: number; }\r\n  | { type: LoomActionType.SET_SELECTEDTHREADDATASOURCEINDEX; dataSourceIndex: number; }\r\n  | { type: LoomActionType.ADD_THREADDATASOURCE; dataSource: ThreadDataSource; }\r\n  | { type: LoomActionType.SET_SELECTEDTHREADDATASOURCE; dataSource: ThreadDataSource; }\r\n\r\nexport type LoomDimensions = {\r\n  harnessCount: number,\r\n  treadleCount: number,\r\n  warpCount: number,\r\n  weftCount: number,\r\n}\r\n\r\nexport type LoomState = {\r\n  name: string;\r\n  id: string;\r\n  dimensions: LoomDimensions;\r\n  harnesses: Harness[];\r\n  warpThreads: Thread[];\r\n  weftThreads: Thread[];\r\n  treadles: Treadle[];\r\n  treadlingInstructions: (Treadle | null)[];\r\n  threadDataSource: ThreadDataSource;\r\n  indexedThreadPalette: IndexedThreadPalette\r\n}\r\n\r\nexport type SerializedLoomState = string;\r\n\r\nexport type LoomStateDict = {\r\n  [uuid: string]: SerializedLoomState\r\n}\r\n\r\nexport type LoomStateStringRepresentation = {\r\n  name: string,\r\n  data: {\r\n    threading: string,\r\n    tieup: string,\r\n    treadling: string\r\n  }\r\n}\r\n\r\n// alias\r\nexport type Preset = LoomStateStringRepresentation;\r\n\r\nexport type Harness = {\r\n  threads: Set<Thread>\r\n}\r\n\r\nexport type Treadle = {\r\n  harnesses: Set<Harness>\r\n}\r\n\r\nexport type Thread = {\r\n  id: number\r\n  threadPaletteIndex: number\r\n}\r\n\r\nexport type ThreadDataSource = {\r\n  color: Color\r\n}\r\n\r\nexport type IndexedThreadPalette = {\r\n  threadPalette: ThreadDataSource[];\r\n  selectedIndex: number\r\n}\r\n\r\nexport type Color = string\r\n\r\nexport type DrawingInstruction = (ctx: CanvasRenderingContext2D) => void\r\nexport type DrawingInstructionWGL = (ctx: WebGL2RenderingContext, colorLocation: any, program: any) => void\r\n\r\nexport enum CameraMode {\r\n  Orthographic,\r\n  Perspective\r\n}\r\n","import { threadId } from 'node:worker_threads';\r\nimport React, { CSSProperties, MouseEventHandler } from 'react';\r\nimport { IndexedThreadPalette, Thread, ThreadDataSource } from '../../types';\r\nimport './Button.css';\r\n\r\ninterface ButtonProps {\r\n    styleDataSource?: ThreadDataSource,\r\n    value?: boolean,\r\n    row: number,\r\n    col: number,\r\n    cellSize: number | {width: number, height: number},\r\n    palette: IndexedThreadPalette,\r\n    thread?: Thread,\r\n    onClickHandler: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nconst Button = (props: ButtonProps) => {\r\n    const style : CSSProperties = {\r\n        gridRow: props.row+1,\r\n        gridColumn: props.col+1\r\n    }\r\n\r\n    if(props.thread) {\r\n        style[\"backgroundColor\"] = props.palette.threadPalette[props.thread.threadPaletteIndex].color;\r\n    }\r\n\r\n    return <div className={\"button \" + (props.value ? \"isActive\" : \"\")}\r\n                style={style}\r\n                onClick={props.onClickHandler}></div>\r\n}\r\n\r\nexport default Button;","import React, { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport { IndexedThreadPalette, SubGridType } from '../../types';\r\nimport Button from '../Button/Button';\r\nimport './ButtonGrid.scss';\r\n\r\ninterface ButtonGridProps {\r\n    gridValues: boolean[][]; \r\n    // setGridValues: Dispatch<SetStateAction<boolean[][]>>;\r\n    cellSize: number;\r\n    subGridType: SubGridType;\r\n    onClickHandler: (e: React.MouseEvent<HTMLDivElement>, type: SubGridType) => void;\r\n    palette: IndexedThreadPalette;\r\n    className?: string;\r\n}\r\n\r\nconst ButtonGrid = (props: ButtonGridProps) => {\r\n\r\n    const handleButtonClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        props.onClickHandler(e, props.subGridType);\r\n    }\r\n\r\n    const arrayOfButtons = props.gridValues.map((row, rowIndex) => {\r\n        return row.map((value, colIndex) => {\r\n            return <Button value={value}\r\n                           row={rowIndex}\r\n                           col={colIndex}\r\n                           cellSize={props.cellSize}\r\n                           onClickHandler={handleButtonClick}\r\n                           palette={props.palette}/>\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div className={\"ButtonGrid \" + (props.className ? props.className : \"\")}\r\n             style={{gridTemplateRows: `repeat(1fr, ${props.gridValues.length})`,\r\n                     gridTemplateColumns: `repeat(1fr, ${props.gridValues[0].length})`,\r\n                     width: `${props.gridValues[0].length*props.cellSize}px`,\r\n                     height: `${props.gridValues.length*props.cellSize}px`}}>\r\n            {arrayOfButtons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonGrid;","import { Harness, IndexedThreadPalette, LoomDimensions, LoomState, LoomStateStringRepresentation, Preset, Thread, ThreadDataSource, Treadle } from \"../types\";\r\n// import { uuidv4 }  from 'uuid';\r\nconst { v4: uuidv4 } = require('uuid');\r\nvar cloneDeep = require('lodash/cloneDeep');\r\n\r\n\r\nexport const dimensionDefault: LoomDimensions = {\r\n    harnessCount: 4,\r\n    treadleCount: 4,\r\n    warpCount: 16,\r\n    weftCount: 16\r\n}\r\n\r\n// weft 0, warp 1\r\nexport const defaultWeftThreadColor = '#FFFFFF';\r\nexport const defaultWarpThreadColor = '#000000';\r\nexport const defaultWeftThreadPaletteIndex = 0;\r\nexport const defaultWarpThreadPaletteIndex = 1;\r\n\r\nconst defaultIndexedThreadPalette: IndexedThreadPalette = {\r\n    threadPalette: [createThreadDataSource(defaultWeftThreadColor), createThreadDataSource(defaultWarpThreadColor)],\r\n    selectedIndex: 0\r\n};\r\n\r\nexport const defaultWeftThread: Thread = {\r\n    id: 0,\r\n    threadPaletteIndex: defaultWeftThreadPaletteIndex\r\n}\r\n\r\nexport const defaultWarpThread: Thread = {\r\n    id: 0,\r\n    threadPaletteIndex: defaultWarpThreadPaletteIndex\r\n}\r\n\r\n\r\nexport const rFromHexString = (str: String): number => parseInt(str.substring(1, 3), 16);\r\nexport const gFromHexString = (str: String): number => parseInt(str.substring(3, 5), 16);\r\nexport const bFromHexString = (str: String): number => parseInt(str.substring(5, 7), 16);\r\n\r\nexport function decamelize(str: string, separator: string) {\r\n    separator = typeof separator === 'undefined' ? '_' : separator;\r\n\r\n    return str\r\n        .replace(/([a-z\\d])([A-Z])/g, '$1' + separator + '$2')\r\n        .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + separator + '$2')\r\n        .toLowerCase();\r\n}\r\n\r\nexport const createHarness = (): Harness => {\r\n    return { threads: new Set<Thread>() }\r\n}\r\n\r\nexport const createTreadle = (): Treadle => {\r\n    return { harnesses: new Set<Harness>() }\r\n}\r\n\r\nexport const createThread = (id: number, threadPaletteIndex: number): Thread => {\r\n    return {\r\n        id,\r\n        threadPaletteIndex\r\n    }\r\n}\r\n\r\nexport function loomDimensionsFromString(obj: LoomStateStringRepresentation): LoomDimensions {\r\n    const { threading, tieup, treadling } = obj.data;\r\n    const tieupNumbers: number[] = numbersFromString(tieup);\r\n\r\n    return {\r\n        warpCount: threading.split(',').length,\r\n        weftCount: expandPatternString(treadling).split(',').length,\r\n        treadleCount: tieup.split(',').length,\r\n        harnessCount: Math.max(...tieupNumbers)\r\n    }\r\n}\r\n\r\n// pattern strings are compressed ways of expressing repeated sequences\r\n// an example is '1x4' which would be expanded to '1,1,1,1,' \r\nfunction expandPatternString(str: string): string {\r\n    const regex = /(\\d+)x(\\d+)/g;\r\n    let newStr = str.replaceAll(regex, (_, p1, p2) => {\r\n        const newSubstring = (p1 + ',').repeat(p2)\r\n        return newSubstring\r\n    })\r\n\r\n    newStr = newStr.replaceAll(/,,/g, ',')\r\n    if (newStr.endsWith(','))\r\n        newStr = newStr.substring(0, newStr.length - 1);\r\n\r\n    return newStr;\r\n}\r\n\r\nfunction numbersFromString(str: string): number[] {\r\n    const regex = /(\\d+)/g;\r\n    const matches = str.match(regex);\r\n    return matches ?\r\n        matches.map(s => parseInt(s)) :\r\n        [];\r\n}\r\n\r\nexport function createThreadDataSource(color: string): ThreadDataSource {\r\n    return {\r\n        color: color\r\n    }\r\n}\r\n\r\nexport function createUUID(): string {\r\n    return uuidv4();\r\n}\r\n\r\nexport function createArray(length: number, generatorFunction: () => any) {\r\n    return new Array(length).fill(null).map(_ => generatorFunction());\r\n}\r\n\r\nexport function createLoomState(dimensions: LoomDimensions): LoomState {\r\n    const harnesses = (harnessCount: number): Array<Harness> => createArray(harnessCount, createHarness);\r\n    const treadles = (treadleCount: number): Array<Treadle> => createArray(treadleCount, createTreadle);\r\n    const treadlingInstructions = (weftCount: number) => createArray(weftCount, () => null);\r\n    const warpThreads = (warpCount: number): Array<Thread> => {\r\n        return new Array(warpCount).fill(null).map((_, i) => createThread(i, defaultWarpThreadPaletteIndex));\r\n    }\r\n    const weftThreads = (warpCount: number): Array<Thread> => {\r\n        return new Array(warpCount).fill(null).map((_, i) => createThread(i, defaultWeftThreadPaletteIndex));\r\n    }\r\n\r\n    return {\r\n        id: createUUID(),\r\n        dimensions,\r\n        harnesses: harnesses(dimensions.harnessCount),\r\n        warpThreads: warpThreads(dimensions.warpCount),\r\n        weftThreads: weftThreads(dimensions.weftCount),\r\n        treadles: treadles(dimensions.treadleCount),\r\n        treadlingInstructions: treadlingInstructions(dimensions.weftCount),\r\n        threadDataSource: { color: \"#FFFFFF\" },\r\n        name: \"untitled\",\r\n        indexedThreadPalette: (cloneDeep(defaultIndexedThreadPalette))\r\n    }\r\n}\r\n\r\ntype LoomPart<T> = {\r\n    [setName: string]: Set<T>\r\n}\r\n\r\nexport const convertLoomStateToJSON = (state: LoomState): string => {\r\n    return JSON.stringify({\r\n        id: state.id,\r\n        dimensions: state.dimensions,\r\n        treadles: convertLoomPartToJSON(state.treadles, state.harnesses),\r\n        harnesses: convertLoomPartToJSON(state.harnesses, state.warpThreads),\r\n        treadlingInstructions: state.treadlingInstructions.map(treadle => treadle ? state.treadles.indexOf(treadle) : -1),\r\n        warpThreads: state.warpThreads,\r\n        weftThreads: state.weftThreads,\r\n        threadDataSource: state.threadDataSource,\r\n        name: state.name,\r\n        indexedThreadPalette: state.indexedThreadPalette\r\n    })\r\n}\r\n\r\nexport const convertJSONToLoomState = (jsonData: string): LoomState => {\r\n    const state = JSON.parse(jsonData);\r\n    state.harnesses = state.harnesses.map((subArr: Array<number>) => {\r\n        const harness: Harness = createHarness();\r\n        subArr.forEach((index: number) => { harness.threads.add(state.warpThreads[index]) });\r\n        return harness;\r\n    })\r\n    state.treadles = state.treadles.map((subArr: Array<number>) => {\r\n        const treadle: Treadle = createTreadle();\r\n        subArr.forEach((index: number) => { treadle.harnesses.add(state.harnesses[index]) });\r\n        return treadle;\r\n    })\r\n    state.treadlingInstructions = state.treadlingInstructions.map((index: number) => state.treadles[index]);\r\n    return state;\r\n}\r\n\r\n// treadlingInstructions is an array of references to treadles\r\n// a harness is an object containing a property which is a set of threads\r\n// a treadle is an object containing a property which is a set of harnesses\r\n// a thread is a datasource\r\nfunction convertLoomPartToJSON<T>(partArr: Array<LoomPart<T>>, refArr: Array<T>): Array<Array<number>> {\r\n    // iterate through all items in set, push indexOf item in refArr to newArr\r\n    const indexes: Array<Array<number>> = [];\r\n    partArr.forEach((part, i) => {\r\n        indexes.push([]);\r\n        if (\"harnesses\" in part) {\r\n            // part is treadle, T is harness\r\n            part.harnesses.forEach((harness: T) => {\r\n                indexes[i].push(refArr.indexOf(harness));\r\n            })\r\n\r\n        } else if (\"threads\" in part) {\r\n            // part is harness, T is thread\r\n            part.threads.forEach((thread: T) => {\r\n                indexes[i].push(refArr.indexOf(thread));\r\n            })\r\n        }\r\n    })\r\n    return indexes;\r\n}\r\n\r\nexport function createLoomStateFromStringDataRepesentation(loomStateString: LoomStateStringRepresentation): LoomState {\r\n    const state = createLoomState(loomDimensionsFromString(loomStateString));\r\n    const { threading, tieup, treadling } = loomStateString.data;\r\n\r\n    // parse threading\r\n    // connect harness to warp threads\r\n    threading.split(',')\r\n        .reverse()\r\n        .map(s => parseInt(s))\r\n        .forEach((harnessIndex, warpThreadIndex) => {\r\n            const invertedHarnessIndex = state.harnesses.length - harnessIndex; //  (n - [1,n]) -> [n-1, 0]\r\n            state.harnesses[invertedHarnessIndex].threads.add(state.warpThreads[warpThreadIndex])\r\n        })\r\n\r\n    // parse tieup\r\n    // connect treadles to harnesses\r\n    tieup.split(',')\r\n        .map(treadleConnections => treadleConnections.split('+')\r\n            .map(s => parseInt(s)))\r\n        .forEach((harnessIndexes, treadleIndex) => {\r\n            harnessIndexes.forEach(harnessIndex => {\r\n                const inverseHarnessIndex = (state.harnesses.length - 1) - (harnessIndex - 1);\r\n                state.treadles[treadleIndex].harnesses.add(state.harnesses[inverseHarnessIndex])\r\n            })\r\n        })\r\n\r\n    // parse treadling\r\n    // write treadling instructions\r\n    expandPatternString(treadling)\r\n        .split(',')\r\n        .map(s => parseInt(s))\r\n        .forEach((treadleIndex, treadlingInstructionIndex) => {\r\n            state.treadlingInstructions[treadlingInstructionIndex] = state.treadles[treadleIndex - 1];\r\n        })\r\n\r\n    state.name = loomStateString.name;\r\n\r\n    return state;\r\n}\r\n\r\nexport function setRectangle(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number) {\r\n    var x1 = x;\r\n    var x2 = x + width;\r\n    var y1 = y;\r\n    var y2 = y + height;\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n        x1, y1,\r\n        x2, y1,\r\n        x1, y2,\r\n        x1, y2,\r\n        x2, y1,\r\n        x2, y2,\r\n    ]), gl.STATIC_DRAW);\r\n}","import React, { forwardRef, useMemo } from 'react'\r\nimport { Uniform } from 'three'\r\nimport { Effect } from 'postprocessing'\r\n\r\nconst fragmentShader = `varying vec2 vUv;\r\nvoid main() {\r\n    gl_FragColor.rgba = vec4(1.,1.,1.,1.);\r\n}`\r\n\r\nlet _uParam\r\n\r\n// Effect implementation\r\nclass MyCustomEffectImpl extends Effect {\r\n    // bizarre default object destructuring type of thing\r\n    // what i think is happening is that the constructor expects an object\r\n    // and destructures param from said object\r\n    // and if param does not exist withing said object\r\n    // its default values is 0.1\r\n  constructor({ param = 0.1 } = {}) {\r\n    super('MyCustomEffect', fragmentShader, {\r\n      uniforms: new Map([['param', new Uniform(param)]]),\r\n    })\r\n\r\n    _uParam = param\r\n  }\r\n\r\n  update(renderer, inputBuffer, deltaTime) {\r\n    this.uniforms.get('param').value = _uParam\r\n  }\r\n}\r\n\r\n// Effect component\r\nconst MyCustomEffect = forwardRef(({ param }, ref) => {\r\n  const effect = useMemo(() => new MyCustomEffectImpl(param), [param])\r\n  return <primitive ref={ref} object={effect} dispose={null} />\r\n})\r\n\r\nexport default { MyCustomEffect };","import { useEffect, useMemo, useState } from \"react\";\r\nimport { LoomDimensions } from \"../../types\"\r\nimport { decamelize } from \"../../utils\";\r\nimport './DimensionsEditor.css'\r\n\r\ninterface DimensionsEditorProps {\r\n    dimensions: LoomDimensions\r\n    onDimensionsChange: (...args: any) => void\r\n}\r\n\r\nexport const DimensionsEditor = (props: DimensionsEditorProps) => {\r\n\r\n    const [localDimensions, setLocalDimensions] = useState(props.dimensions);\r\n\r\n    useEffect(() => {\r\n        setLocalDimensions(props.dimensions);\r\n    }, [props.dimensions])\r\n\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        props.onDimensionsChange(localDimensions);\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        e.preventDefault();\r\n        setLocalDimensions({ ...localDimensions, [e.target.name]: parseInt(e.target.value) });\r\n    }\r\n\r\n    const dimensionsAreUnmodified = useMemo(() => Object.keys(localDimensions)\r\n        .every(key => localDimensions[key as keyof LoomDimensions] === props.dimensions[key as keyof LoomDimensions]),\r\n        [props.dimensions, localDimensions]);\r\n\r\n    const formItems = Object.keys(props.dimensions).map((dimensionKey: string) => {\r\n        return (\r\n            <>\r\n                <label className=\"InputLabel\" htmlFor={dimensionKey}>{decamelize(dimensionKey, \" \") + \" \"}</label>\r\n                <input className=\"InputField input-dimension\"\r\n                    style={{ display: \"inline\" }}\r\n                    type=\"textfield\"\r\n                    name={dimensionKey}\r\n                    onChange={handleChange}\r\n                    value={localDimensions[dimensionKey as keyof LoomDimensions]} />\r\n                <span>→</span>\r\n                <p className=\"CurrentDimension\" style={{ display: \"inline\" }}>{props.dimensions[dimensionKey as keyof LoomDimensions]}</p>\r\n            </>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"Panel\">\r\n            <h1 className=\"FormHeader\">Dimensions Editor</h1>\r\n            <div className=\"PanelContent\">\r\n                <form className=\"DimensionsForm input-grid input-grid-4\" onSubmit={onSubmit}>\r\n                    {formItems}\r\n                    <button\r\n                        className=\"ApplyBtn\"\r\n                        type=\"submit\"\r\n                        disabled={dimensionsAreUnmodified}>\r\n                        Apply\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { IndexedThreadPalette, Thread, ThreadDataSource } from '../../types';\r\nimport { createThread, createThreadDataSource } from '../../utils';\r\nimport './ThreadEditor.css'\r\nvar cloneDeep = require('lodash/cloneDeep');\r\n\r\ninterface ThreadEditorProps {\r\n    indexedThreadPalette: IndexedThreadPalette\r\n    onSelectThreadDataSource: (index: number) => void\r\n    onSetThreadDataSource: (threadDataSource: ThreadDataSource) => void\r\n    onAddThreadDataSource: (threadDataSource: ThreadDataSource) => void\r\n}\r\n\r\nexport const ThreadEditor = (props: ThreadEditorProps) => {\r\n    const [newThreadDataSource, setNewThreadDataSource] = useState<ThreadDataSource>(createThreadDataSource(\"000000\"));\r\n    const [paletteLock, setPaletteLock] = useState<boolean>(false);\r\n\r\n    const handleColorPickerOnChange = (e: any) => {\r\n        if (!paletteLock) {\r\n            const newThreadDataSource = { ...props.indexedThreadPalette.threadPalette[props.indexedThreadPalette.selectedIndex], color: e.target.value }\r\n            props.onSetThreadDataSource(newThreadDataSource);\r\n        }\r\n        setNewThreadDataSource({ ...newThreadDataSource, color: e.target.value })\r\n    }\r\n\r\n    const handleAddThreadOnClick = (e: any) => {\r\n        props.onAddThreadDataSource(newThreadDataSource);\r\n    }\r\n\r\n    const togglePaletteLock = () => {\r\n        setPaletteLock(!paletteLock);\r\n    }\r\n\r\n    const threadItems = props.indexedThreadPalette.threadPalette.map((threadDataSource, i) => {\r\n        const classes = \"Thread\" + ((i == props.indexedThreadPalette.selectedIndex) ? \" selected\" : \"\");\r\n        // console.log(threadDataSource.color);\r\n        return <div className={classes}\r\n            id={\"thread-\" + i.toString()}\r\n            style={{ backgroundColor: threadDataSource.color }}\r\n            onClick={(e: any) => { props.onSelectThreadDataSource(e.target.id.split('-')[1]) }} />\r\n    })\r\n\r\n    return (\r\n        <div className=\"ThreadEditorContainer Panel\">\r\n            <h1>Thread Palette</h1>\r\n            <div className=\"PanelContent\">\r\n                <div className=\"ThreadContainer\">\r\n                    {threadItems}\r\n                    <button className=\"AddThreadButton\"\r\n                        onClick={handleAddThreadOnClick}>+</button>\r\n                </div>\r\n                <div className=\"ThreadAttributeDesigner\">\r\n                    <input className=\"ColorPicker\" type=\"color\" id=\"ColorPicker\" onChange={handleColorPickerOnChange}></input>\r\n                </div>\r\n                <button className=\"LockBtn\" onClick={togglePaletteLock}>{paletteLock ? \"Unlock Palette\" : \"Lock Palette\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport { IndexedThreadPalette, Orientation, SubGridType, Thread } from '../../types';\r\nimport Button from '../Button/Button';\r\nimport '../ButtonGrid/ButtonGrid.scss';\r\n\r\ninterface ThreadButtonGridProps {\r\n    gridValues: Thread[];\r\n    orientation: Orientation;\r\n    // setGridValues: Dispatch<SetStateAction<boolean[][]>>;\r\n    cellSize: {width: number, height: number};\r\n    subGridType: SubGridType;\r\n    onClickHandler: (e: React.MouseEvent<HTMLDivElement>, subGridType: SubGridType) => void;\r\n    palette: IndexedThreadPalette;\r\n    className?: string;\r\n}\r\n\r\nconst ThreadButtonGrid = (props: ThreadButtonGridProps) => {\r\n\r\n    const buttonOnClickHandler = (e: any) => {\r\n        props.onClickHandler(e, props.subGridType);\r\n    }\r\n\r\n    const arrayOfButtons = props.gridValues.map((item, index) => {\r\n        return <Button  styleDataSource={props.palette.threadPalette[item.threadPaletteIndex]}\r\n                        col={(props.orientation===Orientation.HORIZONTAL) ? index : 0}\r\n                        row={(props.orientation===Orientation.VERTICAL) ? index : 0}\r\n                        cellSize={{width: props.cellSize.width, height: props.cellSize.height}}\r\n                        onClickHandler={buttonOnClickHandler}\r\n                        thread={props.gridValues[index]}\r\n                        palette={props.palette}/>\r\n    })\r\n\r\n    return (\r\n        <div className={\"ButtonGrid \" + (props.className ? props.className : \"\")}\r\n             style={{gridTemplateColumns: `repeat(1fr, ${props.orientation===Orientation.VERTICAL ? props.gridValues.length : 1})`,\r\n                     gridTemplateRows: `repeat(1fr, ${props.orientation===Orientation.HORIZONTAL ? props.gridValues.length : 1})`,\r\n                     width: `${(props.orientation===Orientation.HORIZONTAL ? props.gridValues.length : 1)*props.cellSize.width}px`,\r\n                     height: `${(props.orientation===Orientation.VERTICAL ? props.gridValues.length : 1)*props.cellSize.height}px`}}>\r\n            {arrayOfButtons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThreadButtonGrid;","const ImageEditor = (props: any) => {\r\n    return (\r\n        <div className=\"Panel\">\r\n            <h1 className=\"FormHeader\">Image Editor</h1>\r\n            <div className=\"PanelContent input-grid\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageEditor;","import * as THREE from \"three\";\r\nimport {extend} from \"@react-three/fiber\"\r\nimport { DataTexture } from \"three\";\r\nimport { shaderMaterial } from \"@react-three/drei\";\r\n\r\nconst defaultDataBuffer = new Uint8Array(3);\r\n\r\nexport const WeaveDisplayMaterial = shaderMaterial(\r\n    {\r\n        patternDataTexture: new DataTexture(defaultDataBuffer,1,1,THREE.RGBFormat),\r\n        repeats: 1\r\n    },\r\n    `\r\nvarying vec2 vUv;\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`,\r\n    `varying vec2 vUv;\r\nuniform float repeats;\r\nuniform sampler2D patternDataTexture;\r\nvoid main() {\r\n    vec2 uv = vUv * repeats;\r\n    uv = uv - floor(uv);\r\n    uv.y = 1. - uv.y;\r\n    gl_FragColor.rgba = texture2D(patternDataTexture, uv);\r\n    gl_FragColor.a = 1.;\r\n}\r\n`\r\n)\r\n\r\nextend({ WeaveDisplayMaterial })\r\n\r\ntype WeaveDisplayMaterialImplementation = {\r\n    patternDataTexture: DataTexture\r\n    repeats: number\r\n  } & JSX.IntrinsicElements['shaderMaterial']\r\n  \r\n  \r\ndeclare global {\r\n    namespace JSX {\r\n        interface IntrinsicElements {\r\n            weaveDisplayMaterial: WeaveDisplayMaterialImplementation\r\n        }\r\n    }\r\n}","import { OrbitControls, OrthographicCamera, PerspectiveCamera } from '@react-three/drei';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { Mesh } from 'three';\r\nimport { rFromHexString, bFromHexString, gFromHexString } from '../../utils';\r\nimport './CustomBlurEffect.js';\r\nimport \"./WeaveDisplayMaterial\";\r\n\r\nimport { useThree } from '@react-three/fiber'\r\nimport { CameraMode } from '../../types';\r\n\r\nfunction Foo() {\r\n    const state = useThree();\r\n    return state;\r\n}\r\n\r\nconst createPatternDataTexture = (width: number, height: number, buffer: string[]) => {\r\n    const size = width * height;\r\n    const patternData = new Uint8Array(3 * size);\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        const stride = i * 3;\r\n\r\n        const r = rFromHexString(buffer[i]);\r\n        const g = gFromHexString(buffer[i]);\r\n        const b = bFromHexString(buffer[i]);\r\n\r\n        patternData[stride] = r;\r\n        patternData[stride + 1] = g;\r\n        patternData[stride + 2] = b;\r\n    }\r\n\r\n    const patternTexture = new THREE.DataTexture(patternData, width, height, THREE.RGBFormat);\r\n    return patternTexture;\r\n}\r\n\r\ninterface SceneProps {\r\n    warpThreadCount: number,\r\n    weftThreadCount: number,\r\n    unitSize: number,\r\n    repeats: number,\r\n    colorBuffer: string[],\r\n    cameraMode: CameraMode\r\n}\r\n\r\nconst initialPatternDataTexture = createPatternDataTexture(2, 2, [\"#ffffff\", \"#000000\", \"#ffffff\", \"#000000\"]);\r\n\r\nfunction Scene(props: SceneProps) {\r\n    const myMesh = useRef<Mesh>();\r\n    const perspectiveCameraRef = useRef<typeof PerspectiveCamera>();\r\n    const [patternDataTexture, setPatternDataTexture] = useState(initialPatternDataTexture);\r\n    const threeState = Foo();\r\n\r\n    const max = () => Math.max(props.warpThreadCount, props.weftThreadCount);\r\n    const perspectivePlaneWidth = () => (props.warpThreadCount / max());\r\n    const perspectivePlaneHeight = () => (props.weftThreadCount / max());\r\n    const aspect = () => (perspectivePlaneWidth() / perspectivePlaneHeight());\r\n    const vFov = () => Math.atan(perspectivePlaneHeight() / 2) * (360 / Math.PI);\r\n    const hFov = () => 2 * Math.atan(Math.tan(vFov() * Math.PI / 180 / 2) * aspect()) * 180 / Math.PI;\r\n\r\n    useEffect(() => {\r\n        setPatternDataTexture(createPatternDataTexture(props.warpThreadCount, props.weftThreadCount, props.colorBuffer));\r\n        patternDataTexture.needsUpdate = true;\r\n        if (\"fov\" in threeState.camera) {\r\n            threeState.camera.fov = vFov();\r\n        }\r\n    }, [props]);\r\n\r\n    const canvasWidth = props.warpThreadCount * props.unitSize;\r\n    const canvasHeight = props.weftThreadCount * props.unitSize;\r\n\r\n    const enableOrbitControls = props.cameraMode === CameraMode.Perspective;\r\n\r\n    return (\r\n        <>\r\n            {(props.cameraMode === CameraMode.Orthographic) &&\r\n                <OrthographicCamera\r\n                    makeDefault\r\n                    args={[canvasWidth / -2, canvasWidth / 2, canvasHeight / 2, canvasHeight / -2, 0, 1000]} />\r\n            }\r\n            {(props.cameraMode === CameraMode.Perspective) &&\r\n                <PerspectiveCamera\r\n                    makeDefault\r\n                    position={[0, 0, 1]}\r\n                    args={[vFov(), aspect(), .1, 2000]}\r\n                    ref={perspectiveCameraRef}\r\n                />\r\n            }\r\n            <OrbitControls\r\n                enablePan={enableOrbitControls}\r\n                enableZoom={enableOrbitControls}\r\n                enableRotate={enableOrbitControls} />\r\n            <mesh ref={myMesh}>\r\n                <planeGeometry attach='geometry' args={props.cameraMode === CameraMode.Orthographic ?\r\n                    [canvasWidth, canvasHeight, 1, 1] :\r\n                    [perspectivePlaneWidth(), perspectivePlaneHeight(), 1, 1]} />\r\n                <weaveDisplayMaterial attach='material' patternDataTexture={patternDataTexture} repeats={props.repeats} />\r\n            </mesh>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Scene;\r\n","import './InfoPanel.scss';\r\n\r\nexport const InfoPanel: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<div className=\"Panel InfoPanel\" >\r\n\t\t\t<h1>Welcome!</h1>\r\n\t\t\t<p className=\"info\">\r\n\t\t\t\tThe <i>Woven Images</i> editor has several presets for you to get started with. You can load them up via <strong>File &gt; Load Preset.</strong>\r\n\t\t\t</p>\r\n\t\t\t<p className=\"info\">\r\n\t\t\t\tAlso play around with the <i>pattern scale</i> to see your woven pattern at different scales.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"info\">\r\n\t\t\t\tThe editor emulates <i>weaving draft</i> notation, where you can enter treadling, tie-up, and threading data and see a live view of the pattern they create.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"info\">\r\n\t\t\t\tLastly, you can also view the pattern in 3D by going to <strong>View &gt; 3D</strong>. From there you can left-click to rotate, scroll to zoom, and right-click to pan.\r\n\t\t\t</p>\r\n\t\t\t<p className='info'>\r\n\t\t\t\tPlease report issues or request new features on <a href=\"https://github.com/pcsteppan/woven-images/issues\">github.</a>\r\n\t\t\t</p>\r\n\t\t</div >\r\n\t)\r\n}","import { useEffect, useReducer, useState } from \"react\";\r\nimport ButtonGrid from \"../ButtonGrid/ButtonGrid\"\r\nimport { LoomActionType, LoomAction, LoomState, Harness, Treadle, Thread, LoomDimensions, Orientation, SubGridType, ThreadDataSource, CameraMode } from '../../types';\r\nimport { createThread, createTreadle, createHarness, dimensionDefault, createLoomState, defaultWarpThreadPaletteIndex, defaultWeftThreadPaletteIndex } from '../../utils';\r\nimport './LoomEditor.scss'\r\nimport { DimensionsEditor } from \"../DimensionsEditor/DimensionsEditor\";\r\nimport { ThreadEditor } from \"../ThreadEditor/ThreadEditor\";\r\nimport ThreadButtonGrid from \"../ThreadButtonGrid/ThreadButtonGrid\";\r\nimport ImageEditor from \"../ImageEditor/ImageEditor\";\r\nimport Scene from \"../WeaveDisplay/WeaveDisplayThree\";\r\nimport { Canvas } from 'react-three-fiber';\r\nimport { InfoPanel } from \"../InfoPanel/InfoPanel\";\r\nvar cloneDeep = require('lodash/cloneDeep');\r\n\r\nfunction reducer(state: LoomState, action: LoomAction): LoomState {\r\n    const stateCopy: LoomState = cloneDeep(state);\r\n\r\n    switch (action.type) {\r\n        case LoomActionType.SET_HARNESSTOTHREADATTACHMENTS:\r\n            // LEFT TABLE\r\n            { // block-scope for local consts\r\n                const harness: Harness = stateCopy.harnesses[action.harnessID];\r\n                const thread: Thread = stateCopy.warpThreads[action.threadID];\r\n\r\n                if (harness.threads.has(thread)) {\r\n                    harness.threads.delete(thread);\r\n                } else {\r\n                    for (let i = 0; i < stateCopy.harnesses.length; i++) {\r\n                        if (stateCopy.harnesses[i].threads.has(thread)) {\r\n                            stateCopy.harnesses[i].threads.delete(thread);\r\n                        }\r\n                    }\r\n                    harness.threads.add(thread);\r\n                }\r\n            }\r\n            break;\r\n        case LoomActionType.SET_TREADLETOHARNESSATTACHMENTS:\r\n            // TIEUP\r\n            { // block-scope for local consts\r\n                const treadle: Treadle = stateCopy.treadles[action.treadleID];\r\n                const harness: Harness = stateCopy.harnesses[action.harnessID];\r\n\r\n                if (treadle.harnesses.has(harness)) {\r\n                    treadle.harnesses.delete(harness);\r\n                } else {\r\n                    treadle.harnesses.add(harness);\r\n                }\r\n            }\r\n            break;\r\n        case LoomActionType.SET_TREADLINGINSTRUCTION:\r\n            // RIGHT TABLE\r\n            {\r\n                const treadle: Treadle = stateCopy.treadles[action.treadleID];\r\n                if (stateCopy.treadlingInstructions[action.instructionIndex] === treadle) {\r\n                    stateCopy.treadlingInstructions[action.instructionIndex] = null;\r\n                } else {\r\n                    stateCopy.treadlingInstructions[action.instructionIndex] = treadle;\r\n                }\r\n            }\r\n            break;\r\n        case LoomActionType.SET_HARNESSCOUNT:\r\n            if (action.harnessCount > stateCopy.harnesses.length) {\r\n                while (stateCopy.harnesses.length < action.harnessCount) {\r\n                    stateCopy.harnesses.unshift(createHarness());\r\n                }\r\n            } else {\r\n                const removedHarnesses = stateCopy.harnesses.splice(0, stateCopy.harnesses.length - action.harnessCount);\r\n                stateCopy.treadles.forEach(treadle => {\r\n                    removedHarnesses.forEach(harness => {\r\n                        treadle.harnesses.delete(harness);\r\n                    })\r\n                })\r\n            }\r\n            stateCopy.dimensions.harnessCount = action.harnessCount;\r\n            break;\r\n        case LoomActionType.SET_TREADLECOUNT:\r\n            if (action.treadleCount > stateCopy.treadles.length) {\r\n                while (stateCopy.treadles.length < action.treadleCount) {\r\n                    stateCopy.treadles.push(createTreadle());\r\n                }\r\n            } else {\r\n                const removedTreadles = stateCopy.treadles.splice(action.treadleCount);\r\n                stateCopy.treadlingInstructions.forEach(instruction => {\r\n                    removedTreadles.forEach(removedTreadle => {\r\n                        instruction = (instruction === removedTreadle) ? null : instruction;\r\n                    })\r\n                })\r\n            }\r\n            stateCopy.dimensions.treadleCount = action.treadleCount;\r\n            break;\r\n        case LoomActionType.SET_WARPCOUNT:\r\n            if (action.warpCount > state.warpThreads.length) {\r\n                while (stateCopy.warpThreads.length < action.warpCount) {\r\n                    stateCopy.warpThreads.unshift(createThread(stateCopy.warpThreads.length, defaultWarpThreadPaletteIndex));\r\n                }\r\n            } else {\r\n                stateCopy.warpThreads.splice(0, stateCopy.warpThreads.length - action.warpCount);\r\n            }\r\n            stateCopy.warpThreads.forEach((wt, i) => {\r\n                wt.id = i;\r\n            });\r\n            stateCopy.dimensions.warpCount = action.warpCount;\r\n            break;\r\n        case LoomActionType.SET_WEFTCOUNT:\r\n            // weft and treadling instruction\r\n            if (action.weftCount > state.weftThreads.length) {\r\n                while (stateCopy.weftThreads.length < action.weftCount) {\r\n                    stateCopy.weftThreads.push(createThread(stateCopy.weftThreads.length, defaultWeftThreadPaletteIndex));\r\n                    stateCopy.treadlingInstructions.push(null);\r\n                }\r\n            } else {\r\n                stateCopy.weftThreads.splice(action.weftCount);\r\n                stateCopy.treadlingInstructions.splice(action.weftCount);\r\n            }\r\n            stateCopy.dimensions.weftCount = action.weftCount;\r\n            break;\r\n        case LoomActionType.SET_STATE:\r\n            const newState = action.state;\r\n            return newState;\r\n        case LoomActionType.SET_WARPTHREADTHREADPALETTEINDEX:\r\n            // stateCopy.warpThreads[action.warpThreadID].dataSource = stateCopy.indexedThreadPalette.threadPalette[stateCopy.indexedThreadPalette.selectedIndex];\r\n            stateCopy.warpThreads[action.warpThreadID].threadPaletteIndex = stateCopy.indexedThreadPalette.selectedIndex;\r\n            break;\r\n        case LoomActionType.SET_WEFTTHREADTHREADPALETTEINDEX:\r\n            // stateCopy.weftThreads[action.weftThreadID].dataSource = stateCopy.indexedThreadPalette.threadPalette[stateCopy.indexedThreadPalette.selectedIndex];\r\n            stateCopy.weftThreads[action.weftThreadID].threadPaletteIndex = stateCopy.indexedThreadPalette.selectedIndex;\r\n            break;\r\n        case LoomActionType.SET_SELECTEDTHREADDATASOURCE:\r\n            stateCopy.indexedThreadPalette.threadPalette[stateCopy.indexedThreadPalette.selectedIndex] = action.dataSource;\r\n            break;\r\n        case LoomActionType.ADD_THREADDATASOURCE:\r\n            stateCopy.indexedThreadPalette.threadPalette.push(cloneDeep(action.dataSource));\r\n            break;\r\n        case LoomActionType.SET_SELECTEDTHREADDATASOURCEINDEX:\r\n            stateCopy.indexedThreadPalette.selectedIndex = action.dataSourceIndex;\r\n            break;\r\n    }\r\n    return stateCopy;\r\n}\r\n\r\ninterface LoomProps {\r\n    currentState: LoomState,\r\n    onChange: (...args: any) => void,\r\n    cameraMode: CameraMode\r\n}\r\n\r\nconst Loom = (props: LoomProps) => {\r\n    const [state, dispatch] = useReducer(reducer, createLoomState(dimensionDefault));\r\n\r\n    // IMAGE PROPERTIES\r\n    const [imageCellSize, setImageCellSize] = useState<number>(16);\r\n    const [imageScale, setImageScale] = useState<number>(1);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: LoomActionType.SET_STATE, state: props.currentState });\r\n    }, [props.currentState]);\r\n\r\n    useEffect(() => {\r\n        props.onChange(state);\r\n    }, [props, state]);\r\n\r\n    const loomGridOnClickEventHandler = (e: any, type: SubGridType) => {\r\n        const target = e.target as HTMLDivElement;\r\n        const gridRow: number = parseInt(target.style.gridRow) - 1;\r\n        const gridCol: number = parseInt(target.style.gridColumn) - 1;\r\n        switch (type) {\r\n            case SubGridType.HARNESSTOTHREADTABLE:\r\n                dispatch({ type: LoomActionType.SET_HARNESSTOTHREADATTACHMENTS, harnessID: gridRow, threadID: gridCol });\r\n                break;\r\n            case SubGridType.TIEUPTABLE:\r\n                dispatch({ type: LoomActionType.SET_TREADLETOHARNESSATTACHMENTS, treadleID: gridCol, harnessID: gridRow });\r\n                break;\r\n            case SubGridType.TREADLINGTABLE:\r\n                dispatch({ type: LoomActionType.SET_TREADLINGINSTRUCTION, treadleID: gridCol, instructionIndex: gridRow });\r\n                break;\r\n            case SubGridType.WEFTTHREADTABLE:\r\n                // Weft thread data source change\r\n                dispatch({ type: LoomActionType.SET_WEFTTHREADTHREADPALETTEINDEX, weftThreadID: gridRow });\r\n                break;\r\n            case SubGridType.WARPTHREADTABLE:\r\n                // Warp thread data source change\r\n                dispatch({ type: LoomActionType.SET_WARPTHREADTHREADPALETTEINDEX, warpThreadID: gridCol });\r\n                break;\r\n        }\r\n    }\r\n\r\n    const topGridValues = (warpThreads: Thread[], harnesses: Harness[]): Array<Array<boolean>> => {\r\n        const gridValues: boolean[][] = new Array<Array<boolean>>(harnesses.length).fill(new Array<boolean>()).map((_, rowIndex) => {\r\n            return new Array<boolean>(warpThreads.length).fill(false).map((_, colIndex) => {\r\n                return harnesses[rowIndex].threads.has(warpThreads[colIndex]);\r\n            })\r\n        });\r\n        return gridValues;\r\n    }\r\n\r\n    const tieup = (harnesses: Harness[], treadles: Treadle[]) => {\r\n        const gridValues: boolean[][] = new Array<Array<boolean>>(harnesses.length).fill(new Array<boolean>()).map((_, rowIndex) => {\r\n            return new Array<boolean>(treadles.length).fill(false).map((_, colIndex) => {\r\n                return treadles[colIndex].harnesses.has(harnesses[rowIndex]);\r\n            })\r\n        });\r\n        return gridValues;\r\n    }\r\n\r\n    const rightGridValues = (treadles: Treadle[], treadlingInstructions: (Treadle | null)[]) => {\r\n        const gridValues: boolean[][] = new Array<Array<boolean>>(treadlingInstructions.length).fill(new Array<boolean>()).map((_, rowIndex) => {\r\n            return new Array<boolean>(treadles.length).fill(false).map((_, colIndex) => {\r\n                return treadlingInstructions[rowIndex] === treadles[colIndex];\r\n            })\r\n        });\r\n        return gridValues;\r\n    }\r\n\r\n    // array to be used for generating datatexture,\r\n    const weaveDisplayColorBuffer = (state: LoomState): string[] => {\r\n        const width = state.dimensions.warpCount;\r\n        const height = state.dimensions.weftCount;\r\n        const colorBuffer = new Array(width * height).fill(\"#000000\");\r\n        const index = (row: number, col: number) => row * (width) + col;\r\n        state.treadlingInstructions.forEach((treadleInstruction, row) => {\r\n            const currentWeftThread = state.weftThreads[row];\r\n            const activeWarpThreads = new Set();\r\n            treadleInstruction?.harnesses.forEach((harness) => {\r\n                harness.threads.forEach(thread => activeWarpThreads.add(thread));\r\n            });\r\n            state.warpThreads.forEach((currentWarpThread, col) => {\r\n                colorBuffer[index(row, col)] = activeWarpThreads.has(currentWarpThread)\r\n                    ? state.indexedThreadPalette.threadPalette[currentWarpThread.threadPaletteIndex].color\r\n                    : state.indexedThreadPalette.threadPalette[currentWeftThread.threadPaletteIndex].color;\r\n            });\r\n        });\r\n        return colorBuffer;\r\n    }\r\n\r\n    const getValidDimension = (dimension: number) => {\r\n        return !isNaN(dimension) && dimension > 0 ? dimension : 1;\r\n    }\r\n\r\n    const getValidatedDimensions = (dimensions: LoomDimensions) => Object.fromEntries(\r\n        Object.entries(dimensions)\r\n            .map(([k, v]) => [k, getValidDimension(v)])\r\n    ) as LoomDimensions;\r\n\r\n    const handleDimensionsChange = (dimensions: LoomDimensions) => {\r\n        dimensions = getValidatedDimensions(dimensions);\r\n        dispatch({ type: LoomActionType.SET_HARNESSCOUNT, harnessCount: dimensions.harnessCount });\r\n        dispatch({ type: LoomActionType.SET_TREADLECOUNT, treadleCount: dimensions.treadleCount });\r\n        dispatch({ type: LoomActionType.SET_WARPCOUNT, warpCount: dimensions.warpCount });\r\n        dispatch({ type: LoomActionType.SET_WEFTCOUNT, weftCount: dimensions.weftCount });\r\n    }\r\n\r\n    const handleSelectThreadDataSource = (selectedThreadDataSourceIndex: number) => {\r\n        dispatch({ type: LoomActionType.SET_SELECTEDTHREADDATASOURCEINDEX, dataSourceIndex: selectedThreadDataSourceIndex });\r\n    }\r\n\r\n    const handleOnAddThreadDataSource = (threadDataSourceToAdd: ThreadDataSource) => {\r\n        dispatch({ type: LoomActionType.ADD_THREADDATASOURCE, dataSource: threadDataSourceToAdd });\r\n    }\r\n\r\n    const handleSetThreadDataSource = (newthreadDataSource: ThreadDataSource) => {\r\n        dispatch({ type: LoomActionType.SET_SELECTEDTHREADDATASOURCE, dataSource: newthreadDataSource })\r\n    }\r\n\r\n    return (\r\n        <div className=\"LoomEditorContainer\">\r\n            <div className=\"LoomPane\">\r\n                <div className=\"LoomContainer\"\r\n                    style={{\r\n                        gridTemplateColumns: (state.dimensions.warpCount * imageCellSize) + \"px auto auto\",\r\n                        gridTemplateRows: \"auto auto \" + (state.dimensions.weftCount * imageCellSize) + \"px\"\r\n                    }}>\r\n                    <ThreadButtonGrid\r\n                        subGridType={SubGridType.WARPTHREADTABLE}\r\n                        cellSize={{ width: imageCellSize, height: (imageCellSize / 2.) }}\r\n                        gridValues={state.warpThreads}\r\n                        orientation={Orientation.HORIZONTAL}\r\n                        onClickHandler={loomGridOnClickEventHandler}\r\n                        palette={state.indexedThreadPalette}\r\n                        className={\"justifyEnd\"} />\r\n                    <span className=\"void\">&nbsp;</span>\r\n                    <span className=\"void\">&nbsp;</span>\r\n                    <ButtonGrid\r\n                        subGridType={SubGridType.HARNESSTOTHREADTABLE}\r\n                        cellSize={imageCellSize}\r\n                        gridValues={topGridValues(state.warpThreads, state.harnesses)}\r\n                        onClickHandler={loomGridOnClickEventHandler}\r\n                        palette={state.indexedThreadPalette}\r\n                        className={\"justifyEnd\"} />\r\n                    <ButtonGrid\r\n                        subGridType={SubGridType.TIEUPTABLE}\r\n                        cellSize={imageCellSize}\r\n                        gridValues={tieup(state.harnesses, state.treadles)}\r\n                        onClickHandler={loomGridOnClickEventHandler}\r\n                        palette={state.indexedThreadPalette} />\r\n                    <span className=\"void\">&nbsp;</span>\r\n\r\n                    <div className=\"CanvasContainer\">\r\n                        <Canvas\r\n                            className=\"CanvasWrapper\"\r\n                            gl={{ preserveDrawingBuffer: true }}>\r\n                            <Scene\r\n                                warpThreadCount={state.dimensions.warpCount}\r\n                                weftThreadCount={state.dimensions.weftCount}\r\n                                unitSize={imageCellSize}\r\n                                repeats={imageScale}\r\n                                colorBuffer={weaveDisplayColorBuffer(state)}\r\n                                cameraMode={props.cameraMode}\r\n                            />\r\n                        </Canvas>\r\n                        <div id=\"CanvasResizer\"\r\n                            onMouseDown={(e) => console.log(\"mdown\", e)}\r\n                            onMouseMove={(e) => console.log(\"mmove\", e)}\r\n                            onMouseUp={(e) => console.log(\"mup\", e)} />\r\n                    </div>\r\n                    <ButtonGrid\r\n                        subGridType={SubGridType.TREADLINGTABLE}\r\n                        cellSize={imageCellSize}\r\n                        gridValues={rightGridValues(state.treadles, state.treadlingInstructions)}\r\n                        onClickHandler={loomGridOnClickEventHandler}\r\n                        palette={state.indexedThreadPalette} />\r\n                    <ThreadButtonGrid\r\n                        subGridType={SubGridType.WEFTTHREADTABLE}\r\n                        cellSize={{ width: (imageCellSize / 2.), height: imageCellSize }}\r\n                        gridValues={state.weftThreads} orientation={Orientation.VERTICAL}\r\n                        onClickHandler={loomGridOnClickEventHandler}\r\n                        palette={state.indexedThreadPalette} />\r\n                </div>\r\n            </div>\r\n            <div className=\"EditorPanes\">\r\n                <DimensionsEditor\r\n                    dimensions={state.dimensions}\r\n                    onDimensionsChange={handleDimensionsChange}\r\n                />\r\n                <ImageEditor>\r\n                    <label style={{ verticalAlign: \"top\" }} htmlFor=\"cellSize\">cell size </label>\r\n                    <input type=\"range\" min=\"2\" max=\"16\" defaultValue=\"16\" name=\"cellSize\" id=\"cellSizeSlider\" onChange={({ target }) => setImageCellSize(parseInt(target.value))} />\r\n                    <label style={{ verticalAlign: \"top\" }} htmlFor=\"scaleSlider\">pattern scale </label>\r\n                    <input type=\"range\" min=\"1\" max=\"16\" defaultValue=\"1\" name=\"scaleSlider\" id=\"scaleSlider\" onChange={({ target }) => setImageScale(parseInt(target.value))} />\r\n                </ImageEditor>\r\n                <ThreadEditor\r\n                    onSelectThreadDataSource={handleSelectThreadDataSource}\r\n                    onSetThreadDataSource={handleSetThreadDataSource}\r\n                    onAddThreadDataSource={handleOnAddThreadDataSource}\r\n                    indexedThreadPalette={state.indexedThreadPalette} />\r\n                <div className=\"divider\" />\r\n                <InfoPanel />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loom;\r\n","import './ToolBarMenu.css';\r\n\r\n// interface ToolBarMenuProps {\r\n//     name: string,\r\n//     children: JSX.Element[]\r\n// }\r\n\r\nconst ToolBarMenu = (props: any) => {\r\n\r\n\r\n    return (\r\n        <div className=\"ToolBarMenu\">\r\n        <div className=\"ToolBarMenuName\">{props.name}</div>\r\n        <div className=\"ToolBarMenuChildren\">\r\n            {props.children}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBarMenu;","import { ReactNode } from \"react\";\r\nimport './ToolBarMenuNode.css'\r\n\r\n// interface ToolBarMenuNodeProps {\r\n//     children: ReactNode[];\r\n//     text: string\r\n// }\r\n\r\nconst ToolBarMenuNode = (props: any) => {\r\n    return (\r\n        <div onClick={props.onClick} className={props.className ? props.className : \"ToolBarMenuNode\"}>\r\n            <span>{props.text}</span>\r\n            <div className={\"ToolBarMenuSubNodes \"+ (props.children ? \"populated\" : \"\")}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBarMenuNode;","import { Preset } from \"../types\";\r\n\r\nconst STANDARD_TIEUP = \"1+4,1+2,2+3,3+4\";\r\n\r\nexport const getPresetPattern = (name: string): Preset | null => {\r\n  const filteredPatterns = presetPatterns.filter(pattern => pattern.name === name);\r\n  return filteredPatterns.length ? filteredPatterns[0] : null;\r\n}\r\n\r\nexport const presetPatterns: Array<Preset> = [\r\n  {\r\n    name: \"Basic Twill\",\r\n    data: {\r\n      threading: \"1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Periwinkle\",\r\n    data: {\r\n      threading: \"3,2,1,4,3,2,1,4,3,4,3,2,3,2,1,4,3,4,1,2,3,2,3,4,3,4,1,2\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"3,2,1,4x3,3x3,2,1,4x2,1,2,3x3,4x3,1,2,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Diadem\",\r\n    data: {\r\n      threading: \"4,1,2,3,4,1,2,3,4,1,2,3,2,3,2,1,4,3,4,3,4,1,2,1,2,1,4,3,4,3,4,1,2,3,2,3,2,1,4,3,2,1,4,3,2,1,4,1\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"3x2,4,1,2,3,4,1,2,3,4,1x4,4,3,2x4,3,4x4,3,2x4,3,4,1x4,4,3,2,1,4,3,2,1,4,3x2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Rings and Chains\",\r\n    data: {\r\n      threading: \"1,2,3,4,1,2,3,4,1,2,3,4,1,4,1,4,3,4,3,2,3,2,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,2,3,2,3,4,3,4,1,4,1,4,3,2,1,4,1,2,3,4\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"1,2,3,4,1x4,4x3,3x3,2x3,1x2,2x2,1x2,2x2,1x2,2x2,1x2,2x2,1x2,2x2,1x2,2x3,3x3,4x3,1x4,4,3,2,1\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Wheel of Fortune\",\r\n    data: {\r\n      threading: \"1,2,3,4,1,2,1,2,3,2,3,4,3,4,1,4,3,4,1,4,3,4,3,2,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,3,2,1,2,1,4,1,4,3,4,1,4,3,4,1,4,1,2,1,2,3,2,3,4,1,2,3,4\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"2,3,4,1,2x3,3x3,4x3,1x2,4x2,1x2,4x3,3x3,2x3,1,4,3,2,1,4,3,2,1,4,3x3,2x3,1x3,4x2,1x2,4x2,1x3,2x3,3x3,4,1,2,3,4,1\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Chariot Wheel No. 3\",\r\n    data: {\r\n      threading: \"4,3,2,1,4,3,2,3,4,3,2,3,4,1,4,1,4,1,2,1,2,1,4,1,2,1,4,1,2,1,2,1,4,1,4,1,4,3,2,3,4,3,2,3,4,1,2,3\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"4,3,2,1,4,3x2,4x2,3x2,4,1x5,2x4,1x2,2x2,1x2,2x4,1x5,4,3x2,4x2,3x2,4,1,2,3,4\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Chariot Wheel No. 3 Alt\",\r\n    data: {\r\n      threading: \"4,3,2,1,4,3,2,3,4,3,2,3,4,1,4,1,4,1,2,1,2,1,4,1,2,1,4,1,2,1,2,1,4,1,4,1,4,3,2,3,4,3,2,3,4,1,2,3\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"3,4,1,2,3,4x2,3x2,4x2,3,2x5,1x4,2x2,1x2,2x2,1x4,2x5,3,4x2,3x2,4x2,3,2,1,4,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Church Windows\",\r\n    data: {\r\n      threading: \"3,2,1,4,3,4,3,4,1,4,1,2,1,4,1,4,3,4,3,4,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,4,3,4,3,4,1,4,1,2,1,4,1,4,3,4,3,4,2,1\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"3,2,1,4x4,1x3,2x2,1x3,4x4,1,2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2,1,4x4,1x3,2x2,1x3,4x4,1,2,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Cambridge Beauty\",\r\n    data: {\r\n      threading: \"2,3,4,1,4,1,4,1,4,3,4,3,4,3,2,3,2,3,2,1,2,1,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,1,2,1,2,3,2,3,2,3,4,3,4,3,4,1,4,1,4,1,4,3\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"3,4,1x6,4x5,3x5,2x6,3,4x2,3,2x2,3,4x2,3,2x2,3,4x2,3,2x2,3,4x2,3,2x2,3,4x2,3,2x6,3x5,4x5,1x6,4,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Star of Bethlehem\",\r\n    data: {\r\n      threading: \"2,3,4,1,2,3,4,1,2,3,4,1,2,1,2,3,2,3,4,3,4,1,4,1,2,3,4,1,4,3,2,1,4,1,4,3,4,3,2,3,2,1,2,1,4,3,2,1\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"2,3,4,1,2,3,4,1,2,3,4,1,2x3,3x3,4x3,1x3,1,2,3,4,1x2,4,3,2,1x3,4x3,3x3,2x3,1,4,3,2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Maltese Cross\",\r\n    data: {\r\n      threading: \"1,2,3,4,1,2,1,4,1,4,3,4,3,2,3,2,1,2,1,4,1,2,1,4,1,2,1,2,3,2,3,4,3,4,1,4,1,2,1,4,3,2\",\r\n      tieup: \"1+4,1+2,2+3,3+4\",\r\n      treadling: \"2,1,4,3,2,1,4,3,2x2,3x3,4x3,1x3,2x3,3x2,2x2,3x2,2x3,1x3,4x3,3x3,2x2,3,4,1,2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Orange Peel A\",\r\n    data: {\r\n      threading: \"1,2,3,4,1,2,3,2,3,4,3,4,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,4,3,4,3,2,3,2,1,4,3,2\",\r\n      tieup: STANDARD_TIEUP,\r\n      treadling: \"2,3,4,1,2,3x3,4x3,1x3,2x2,1x2,2x2,1x2,2x2,1x3,4x3,3x3,2,1,4,3,2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Orange Peel B\",\r\n    data: {\r\n      threading: \"1,2,3,4,1,2,3,2,3,4,3,4,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,4,3,4,3,2,3,2,1,4,3,2\",\r\n      tieup: STANDARD_TIEUP,\r\n      treadling: \"1,4,3,2,1,4x3,3x3,2x3,1x2,2x2,1x2,2x2,1x2,2x3,3x3,4x3,1,2,3,4,1\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Lovers Knot No. 1\",\r\n    data: {\r\n      threading: \"4,3,2,1,2,1,2,3,4,3,4,1,4,3,4,1,4,3,4,3,2,1,2,1,2,3,4,1,2,3,2,1,4,3,2,1,2,3,4,1,2,3,2,1\",\r\n      tieup: STANDARD_TIEUP,\r\n      treadling: \"4,3,2x4,3,4x3,1x2,4x2,1x2,4x3,3,2x4,3,4,1,2,3x2,2,1,4,3,2x2,3,4,1,2,3x2,2,1\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Lovers Knot No. 2\",\r\n    data: {\r\n      threading: \"3,2,1,4,3,2,3,2,1,2,3,2,1,2,3,2,3,4,3,4,3,4,1,4,1,4,1,4,3,4,1,4,3,4,1,4,1,4,1,4,3,4,3,4,3,2,3,2,1,2,3,2,1,2,3,2,3,4,1,2,3,2,1,4,3,2,1,2,3,4,1,2\",\r\n      tieup: STANDARD_TIEUP,\r\n      treadling: \"2,3,4,1,2,3x2,2,1,4,3x3,2x2,3x2,2x2,3x3,4x5,1x6,4x2,1x2,4x2,1x6,4x5,3x3,2x2,3x2,2x2,3x3,4,1,2,3x2,2,1,4,3,2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Cross of Tennessee\",\r\n    data: {\r\n      threading: \"4,3,2,1,4,3,2,1,4,1,4,1,4,3,4,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,4,3,4,1,4,1,4,1,2,3,4,1,2,3,4,1\",\r\n      tieup: STANDARD_TIEUP,\r\n      treadling: \"1,4,3,2,1,4,3,2,1x5,4x3,3,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3,4x3,1x5,2,3,4,1,2,3,4,1\"\r\n    }\r\n  }\r\n]\r\n","import { CameraMode, LoomState, LoomStateDict, LoomStateStringRepresentation, SerializedLoomState } from \"../../types\";\r\nimport { createLoomStateFromStringDataRepesentation } from \"../../utils\";\r\nimport ToolBarMenu from \"../ToolBarMenu/ToolBarMenu\";\r\nimport ToolBarMenuNode from \"../ToolBarMenuNode/ToolBarMenuNode\";\r\nimport { presetPatterns as presetPatterns } from '../../presets/presetWeavingPatterns'\r\n\r\ninterface ToolBarProps {\r\n    saveStateDict: LoomStateDict,\r\n    saveStateNames: { [id: string]: string }\r\n    onLoad: (stateID: string) => void,\r\n    onSaveAs: (...args: any) => void,\r\n    onSave: (...args: any) => void,\r\n    onLoadPreset: (state: LoomState) => void,\r\n    onCreateNew: (...args: any) => void,\r\n    onDimensionChange: (...args: any) => void\r\n    onExportAsPng: (...args: any) => void\r\n}\r\n\r\nconst ToolBar = (props: ToolBarProps) => {\r\n    const stateIDAsToolBarMenuNode = (id: string) => {\r\n        return <ToolBarMenuNode\r\n            className=\"ToolBarMenuSubNode\"\r\n            text={props.saveStateNames[id]}\r\n            onClick={() => props.onLoad(id)} />\r\n    }\r\n\r\n    const saveStateToolBarMenuNodes: React.ReactNode[] = Object.keys(props.saveStateDict).map((stateID: string) => {\r\n        return stateIDAsToolBarMenuNode(stateID);\r\n    })\r\n\r\n    const presetStateAsToolBarMenuNode = (state: LoomState) => {\r\n        return <ToolBarMenuNode\r\n            className=\"ToolBarMenuSubNode\"\r\n            text={state.name}\r\n            onClick={() => props.onLoadPreset(state)} />\r\n    }\r\n\r\n    const presetStateToolBarMenuNodes = (stateStrings: Array<LoomStateStringRepresentation>): React.ReactNode[] => {\r\n        return stateStrings\r\n            .map(stateString => createLoomStateFromStringDataRepesentation(stateString))\r\n            .map((state, i) => presetStateAsToolBarMenuNode(state));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolBarMenu name={\"File\"}>\r\n                <ToolBarMenuNode\r\n                    text=\"Create New\"\r\n                    onClick={props.onCreateNew}\r\n                />\r\n                <ToolBarMenuNode\r\n                    text=\"Save\"\r\n                    onClick={props.onSave}\r\n                />\r\n                <ToolBarMenuNode\r\n                    text=\"Save As\"\r\n                    onClick={props.onSaveAs}\r\n                />\r\n                <ToolBarMenuNode\r\n                    text=\"Export As PNG\"\r\n                    onClick={props.onExportAsPng}\r\n                />\r\n                <ToolBarMenuNode\r\n                    text=\"Load\">\r\n                    {[...saveStateToolBarMenuNodes]}\r\n                </ToolBarMenuNode>\r\n                <ToolBarMenuNode\r\n                    text=\"Load Preset\">\r\n                    {[...presetStateToolBarMenuNodes(presetPatterns)]}\r\n                </ToolBarMenuNode>\r\n            </ToolBarMenu>\r\n            <ToolBarMenu name={\"View\"}>\r\n                <ToolBarMenuNode\r\n                    text=\"Dimensions\">\r\n                    <ToolBarMenuNode\r\n                        text=\"2D\"\r\n                        onClick={() => props.onDimensionChange(CameraMode.Orthographic)} />\r\n                    <ToolBarMenuNode\r\n                        text=\"3D\"\r\n                        onClick={() => props.onDimensionChange(CameraMode.Perspective)} />\r\n                </ToolBarMenuNode>\r\n            </ToolBarMenu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToolBar;","import { useEffect, useState } from 'react'\r\n\r\n\r\nfunction useLocalStorage<T>(\r\n\r\n  key: string,\r\n\r\n  initialValue: T,\r\n\r\n): [T, (value: T) => void] {\r\n\r\n  // Get from local storage then\r\n\r\n  // parse stored json or return initialValue\r\n\r\n  const readValue = () => {\r\n\r\n    // Prevent build error \"window is undefined\" but keep keep working\r\n\r\n    if (typeof window === 'undefined') {\r\n\r\n      return initialValue\r\n\r\n    }\r\n\r\n\r\n    try {\r\n\r\n      const item = window.localStorage.getItem(key)\r\n\r\n      return item ? JSON.parse(item) : initialValue\r\n\r\n    } catch (error) {\r\n\r\n      console.warn(`Error reading localStorage key “${key}”:`, error)\r\n\r\n      return initialValue\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // State to store our value\r\n\r\n  // Pass initial state function to useState so logic is only executed once\r\n\r\n  const [storedValue, setStoredValue] = useState<T>(readValue)\r\n\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n\r\n  // ... persists the new value to localStorage.\r\n\r\n  const setValue = (value: T) => {\r\n\r\n    // Prevent build error \"window is undefined\" but keeps working\r\n\r\n    if (typeof window == 'undefined') {\r\n\r\n      console.warn(\r\n\r\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\r\n\r\n      )\r\n\r\n    }\r\n\r\n\r\n    try {\r\n\r\n      // Allow value to be a function so we have the same API as useState\r\n\r\n      const newValue = value instanceof Function ? value(storedValue) : value\r\n\r\n\r\n      // Save to local storage\r\n\r\n      window.localStorage.setItem(key, JSON.stringify(newValue))\r\n\r\n\r\n      // Save state\r\n\r\n      setStoredValue(newValue)\r\n\r\n\r\n      // We dispatch a custom event so every useLocalStorage hook are notified\r\n\r\n      window.dispatchEvent(new Event('local-storage'))\r\n\r\n    } catch (error) {\r\n\r\n      console.warn(`Error setting localStorage key “${key}”:`, error)\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setStoredValue(readValue())\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const handleStorageChange = () => {\r\n\r\n      setStoredValue(readValue())\r\n\r\n    }\r\n\r\n\r\n    // this only works for other documents, not the current one\r\n\r\n    window.addEventListener('storage', handleStorageChange)\r\n\r\n\r\n    // this is a custom event, triggered in writeValueToLocalStorage\r\n\r\n    window.addEventListener('local-storage', handleStorageChange)\r\n\r\n\r\n    return () => {\r\n\r\n      window.removeEventListener('storage', handleStorageChange)\r\n\r\n      window.removeEventListener('local-storage', handleStorageChange)\r\n\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  }, [])\r\n\r\n\r\n  return [storedValue, setValue]\r\n\r\n}\r\n\r\n\r\nexport default useLocalStorage","import './Dialog.css'\r\n\r\nconst Dialog = (props: any) => {\r\n    return (\r\n        <div className=\"DialogContainer\">\r\n            <div className=\"DialogBox\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import CodeMirror from '@uiw/react-codemirror';\r\nimport { javascript } from '@codemirror/lang-javascript';\r\nimport { githubDark, githubDarkInit } from '@uiw/codemirror-theme-github';\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport \"./scriptbox.scss\";\r\nimport createTheme from '@uiw/codemirror-themes';\r\nimport { dark } from 'ayu';\r\nimport { tags as t } from '@lezer/highlight';\r\n\r\nconst ayuDarkModTheme = createTheme({\r\n\ttheme: 'dark',\r\n\tsettings: {\r\n\t\tbackground: '#000000',\r\n\t\tforeground: dark.editor.fg.hex(),\r\n\t\tcaret: '#ffffff',\r\n\t\tselection: dark.editor.selection.inactive.hex(),\r\n\t\tselectionMatch: dark.editor.selection.active.hex(),\r\n\t\tlineHighlight: dark.editor.line.hex(),\r\n\t\tgutterBackground: '#000000',\r\n\t\tgutterForeground: dark.editor.fg.hex(),\r\n\t\tfontFamily: \"'JetBrains Mono'\",\r\n\t},\r\n\tstyles: [\r\n\t\t{ tag: [t.comment, t.bracket], color: \"#999\" },\r\n\t\t{ tag: [t.keyword], color: dark.syntax.keyword.hex() },\r\n\t\t{ tag: [t.number], color: dark.syntax.constant.hex() },\r\n\t\t{ tag: [t.operator], color: dark.syntax.operator.hex() },\r\n\t\t{ tag: [t.standard(t.tagName), t.tagName], color: dark.syntax.tag.hex() },\r\n\t\t{ tag: [t.string], color: dark.syntax.string.hex() },\r\n\t\t{ tag: [t.variableName], color: dark.syntax.entity.hex() },\r\n\t\t{ tag: t.function(t.variableName), color: dark.syntax.func.hex() },\r\n\t]\r\n})\r\n\r\nvar x = 2 || 'test';\r\n\r\nexport interface ScriptBoxProps {\r\n\ttransformState: (f: Function) => void\r\n}\r\n\r\nexport function ScriptBox({ transformState }: ScriptBoxProps) {\r\n\tconst initialScript = `// ctx contains a shiftLeft and shiftRight method\r\n// you can also modify any of the state as you would any array in javascript\r\n// using [...arr], .slice(), etc.\r\nreturn {\r\n\t...state,\r\n\twarpThreads: ctx.shiftRight(state.warpThreads),\r\n\ttreadlingInstructions: state.treadlingInstructions\r\n};`\r\n\t// eslint-disable-next-line no-new-func\r\n\tconst [script, setScript] = useState(() => Function('state', 'ctx', initialScript));\r\n\tconst [isActive, setIsActive] = useState(false);\r\n\tconst [delay, setDelay] = useState(400);\r\n\tconst [hidden, setHidden] = useState(true);\r\n\r\n\tconst onChange = useCallback((userCode: any) => {\r\n\t\ttry {\r\n\t\t\t// validate\r\n\t\t\t// eslint-disable-next-line no-new-func\r\n\t\t\tconst f = Function('state', 'ctx', userCode);\r\n\t\t\t// set\r\n\t\t\tsetScript(() => f);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t// handle invalid user input\r\n\t\t\tconsole.log(\"invalid input: \" + e);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet interval: any = null;\r\n\t\tif (isActive) {\r\n\t\t\tinterval = setInterval(() => {\r\n\t\t\t\ttransformState(script);\r\n\t\t\t}, delay);\r\n\t\t} else if (!isActive) {\r\n\t\t\tclearInterval(interval);\r\n\t\t}\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [isActive, delay, script, transformState]);\r\n\r\n\treturn (\r\n\t\t<div className=\"scriptbox\">\r\n\t\t\t<div className=\"scriptbox-inputs\">\r\n\t\t\t\t<div className=\"scriptbox-form\">\r\n\t\t\t\t\t<button className=\"Btn\" onClick={() => transformState(script)}>\r\n\t\t\t\t\t\tApply\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"toggle-loop\">toggle loop:</label>\r\n\t\t\t\t\t\t<input className=\"scriptbox-form--delay-toggle\" name=\"toggle-loop\" type=\"checkbox\" value=\"false\" onChange={() => setIsActive(!isActive)}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"delay-tbx\">delay in ms:</label>\r\n\t\t\t\t\t\t<input className=\"scriptbox-form--delay\" name=\"delay-tbx\" type=\"number\" min=\"20\" max=\"10000\" value={delay} onChange={e => setDelay(parseInt(e.target.value))} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"Btn\" onClick={() => setHidden(!hidden)}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thidden ? 'Show' : 'Hide'\r\n\t\t\t\t\t}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<CodeMirror\r\n\t\t\t\thidden={hidden}\r\n\t\t\t\tvalue={initialScript}\r\n\t\t\t\theight=\"20rem\"\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tlang=\"js\"\r\n\t\t\t\textensions={[javascript()]}\r\n\t\t\t\ttheme={ayuDarkModTheme}\r\n\t\t\t\tbasicSetup={{\r\n\t\t\t\t\tfoldGutter: false,\r\n\t\t\t\t\t// lineNumbers: false,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport function createScriptCallHandler<T>(\r\n\tstate: T,\r\n\tsetState: (state: T) => void,\r\n\tvalidators: Array<(arg: Array<number>) => boolean>) {\r\n\treturn (scriptFunction: Function) => {\r\n\t\t// console.log('starting transform')\r\n\t\ttry {\r\n\t\t\tconst potentialNewState = scriptFunction(state, editorContext);\r\n\t\t\tif (!validators.every(validator => validator(potentialNewState))) {\r\n\t\t\t\tconsole.error('invalid result. skipping transform application: ' + potentialNewState)\r\n\t\t\t\tconst failedValidators = validators.filter(v => !v(potentialNewState));\r\n\t\t\t\tconsole.log(failedValidators, state, potentialNewState);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetState(potentialNewState);\r\n\t\t\t// console.log('transform application successful:')\r\n\t\t\t// console.log(state, \"->\", potentialNewState);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tconsole.error('an error occurred while applying transform: ' + e)\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function useStateWithScriptBox(initialState: any) {\r\n\tconst [state, setState] = useState(initialState);\r\n\r\n\tconst handleScriptCall = createScriptCallHandler(state, setState, [\r\n\t\t// (newState) => Array.isArray(newState),\r\n\t\t// (newState) => newState.length === state.length,\r\n\t]);\r\n\r\n\treturn [state, setState, handleScriptCall];\r\n}\r\n\r\nconst editorContext = {\r\n\tshiftRight: (arr: Array<number>): Array<number> => {\r\n\t\treturn [arr[arr.length - 1], ...arr.slice(0, arr.length - 1)];\r\n\t},\r\n\tshiftLeft: (arr: Array<number>): Array<number> => {\r\n\t\treturn [...arr.slice(1), arr[0]];\r\n\t}\r\n}","import './Container.scss';\r\nimport Loom from '../LoomEditor/LoomEditor';\r\nimport { useState } from 'react';\r\nimport { CameraMode, LoomState, LoomStateDict, SerializedLoomState } from '../../types';\r\nimport ToolBar from '../ToolBar/ToolBar';\r\nimport useLocalStorage from '../../Hooks/useLocalStorage';\r\nimport { convertJSONToLoomState, convertLoomStateToJSON, createLoomState, createLoomStateFromStringDataRepesentation, createUUID, dimensionDefault } from '../../utils';\r\nimport Dialog from '../Dialog/Dialog';\r\nimport { getPresetPattern } from '../../presets/presetWeavingPatterns';\r\nimport { ScriptBox } from '../ScriptBox/ScriptBox';\r\nimport { useStateWithScriptBox } from '../ScriptBox/ScriptBoxHelpers';\r\nvar cloneDeep = require('lodash/cloneDeep');\r\n\r\n\r\nconst Container = () => {\r\n    const [saveStateDict, setSaveStateDict] = useLocalStorage<LoomStateDict>('saveStates', {});\r\n    const [saveStateNames, setSaveStateNames] = useLocalStorage<{ [id: string]: string }>('saveStateNames', {});\r\n    const initialPreset = getPresetPattern(\"Cross of Tennessee\");\r\n    const initialState: LoomState = initialPreset\r\n        ? createLoomStateFromStringDataRepesentation(initialPreset)\r\n        : createLoomState(dimensionDefault);\r\n    const [currentState, setCurrentState, handleCurrentStateScriptBox] = useStateWithScriptBox(initialState);\r\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\r\n    const [currentDialog, setCurrentDialog] = useState<JSX.Element>();\r\n    const [liveStateRef, setLiveStateRef] = useState<LoomState>(currentState);\r\n    const [cameraMode, setCameraMode] = useState<CameraMode>(CameraMode.Orthographic);\r\n\r\n    const updateLiveStateRef = (ref: LoomState) => {\r\n        setLiveStateRef(ref);\r\n    }\r\n\r\n    // save new state to state ref with ID\r\n    const handleSave = () => {\r\n        const serializedLoomState: SerializedLoomState = convertLoomStateToJSON(liveStateRef);\r\n        setSaveStateDict({ ...saveStateDict, [liveStateRef.id]: serializedLoomState });\r\n        setSaveStateNames({ ...saveStateNames, [liveStateRef.id]: liveStateRef.name });\r\n    }\r\n\r\n    // push new state with newly generated uuid with new name\r\n\r\n    // DIALOGS - CLICK OPENS\r\n    const handleSaveAsClickOpen = () => {\r\n        setCurrentDialog(SaveAsDialog);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const handleCreateNewClickOpen = () => {\r\n        setCurrentDialog(CreateNewDialog);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const handleExportAsPngClickOpen = () => {\r\n        setCurrentDialog(ExportAsPngDialog);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    // DIALOG - HANDLERS\r\n    const handleCreateNew = (e: any) => {\r\n        setOpenDialog(false);\r\n        e.preventDefault();\r\n\r\n        const newState = createLoomState(dimensionDefault);\r\n        const newName = e.target[\"fileName\"].value;\r\n        newState.name = newName;\r\n        setCurrentState(newState);\r\n    }\r\n\r\n    const handleSaveAs = (e: any) => {\r\n        setOpenDialog(false);\r\n        e.preventDefault();\r\n\r\n        const newUUID = createUUID();\r\n        const stateClone = cloneDeep(liveStateRef);\r\n        const newName = e.target[\"newFileName\"].value;\r\n        stateClone.name = newName;\r\n        stateClone.id = newUUID;\r\n\r\n        const serilizedState: SerializedLoomState = convertLoomStateToJSON(liveStateRef);\r\n        setSaveStateDict({ ...saveStateDict, [newUUID]: serilizedState });\r\n        setSaveStateNames({ ...saveStateNames, [stateClone.id]: stateClone.name });\r\n        setCurrentState(stateClone);\r\n    }\r\n\r\n    const handleExportAsPng = (e: any) => {\r\n        setOpenDialog(false);\r\n        e.preventDefault();\r\n\r\n        const downloadLink = document.createElement('a');\r\n        const rawFileName: string = e.target[\"fileName\"].value;\r\n        const fileName = rawFileName.length === 0\r\n            ? 'woven_image.png'\r\n            : rawFileName.endsWith('.png')\r\n                ? rawFileName\r\n                : rawFileName + '.png';\r\n        downloadLink.setAttribute('download', fileName);\r\n        const canvas: HTMLCanvasElement | null = document.querySelector('.CanvasWrapper > canvas');\r\n\r\n        if (!canvas) {\r\n            console.error(\"Couldn't find canvas element\");\r\n            return;\r\n        }\r\n\r\n        const link = document.createElement('a');\r\n        link.setAttribute('download', fileName);\r\n        link.setAttribute('href', canvas!.toDataURL('image/png').replace('image/png', 'image/octet-stream'));\r\n        link.click();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const handleLoad = (stateID: string) => {\r\n        const serializedState: SerializedLoomState = saveStateDict[stateID];\r\n        const state: LoomState = convertJSONToLoomState(serializedState);\r\n        setCurrentState(state);\r\n    }\r\n\r\n    const handleLoadPreset = (state: LoomState) => {\r\n        setCurrentState(state);\r\n    }\r\n\r\n    const SaveAsDialog = (\r\n        <Dialog>\r\n            <form className=\"w100\" onSubmit={handleSaveAs}>\r\n                <div className=\"w100\">\r\n                    <span>New file name:</span>\r\n                    <input type=\"text\" name=\"newFileName\" className=\"underline w100\" placeholder={liveStateRef.name}></input>\r\n                </div>\r\n                <div className=\"w100\" style={{ \"marginTop\": \"1em\" }}>\r\n                    <button className=\"cancelBtn\" style={{ \"width\": \"50%\" }} onClick={handleClose}>Cancel</button>\r\n                    <button type=\"submit\" className=\"saveBtn\" style={{ \"width\": \"50%\" }}>Save</button>\r\n                </div>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n\r\n    const CreateNewDialog = (\r\n        <Dialog>\r\n            <form className=\"w100\" onSubmit={handleCreateNew}>\r\n                <div className=\"w100\">\r\n                    <span>File name:</span>\r\n                    <input type=\"text\" name=\"fileName\" className=\"underline w100\" placeholder=\"untitled\"></input>\r\n                </div>\r\n                <div className=\"w100\" style={{ \"marginTop\": \"1em\" }}>\r\n                    <button className=\"cancelBtn\" style={{ \"width\": \"50%\" }} onClick={handleClose}>Cancel</button>\r\n                    <button type=\"submit\" className=\"saveBtn\" style={{ \"width\": \"50%\" }}>Create</button>\r\n                </div>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n\r\n    const ExportAsPngDialog = (\r\n        <Dialog>\r\n            <form className=\"w100\" onSubmit={handleExportAsPng}>\r\n                <div className=\"w100\">\r\n                    <span>File name:</span>\r\n                    <input type=\"text\" name=\"fileName\" className=\"underline w100\" placeholder=\"untitled\"></input>\r\n                </div>\r\n                <div className=\"w100\" style={{ \"marginTop\": \"1em\" }}>\r\n                    <button className=\"cancelBtn\" style={{ \"width\": \"50%\" }} onClick={handleClose}>Cancel</button>\r\n                    <button type=\"submit\" className=\"saveBtn\" style={{ \"width\": \"50%\" }}>Save</button>\r\n                </div>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"container-main\">\r\n                <ToolBar\r\n                    saveStateDict={saveStateDict}\r\n                    saveStateNames={saveStateNames}\r\n                    onCreateNew={handleCreateNewClickOpen}\r\n                    onExportAsPng={handleExportAsPngClickOpen}\r\n                    onLoad={handleLoad}\r\n                    onLoadPreset={handleLoadPreset}\r\n                    onSaveAs={handleSaveAsClickOpen}\r\n                    onSave={handleSave}\r\n                    onDimensionChange={(newMode) => setCameraMode(newMode)} />\r\n                <Loom\r\n                    currentState={currentState}\r\n                    onChange={updateLiveStateRef}\r\n                    cameraMode={cameraMode} />\r\n\r\n                {/* if dialog is open show current dialog */}\r\n                {openDialog && currentDialog}\r\n                {/* Dialog if Save As or Create New are selected in the file menu */}\r\n            </div>\r\n\r\n            <ScriptBox transformState={handleCurrentStateScriptBox}></ScriptBox>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container;","import React from 'react';\nimport Container from '../Container/Container';\nimport './App.css';\nimport '../../Styles/typography.scss';\nimport '../../Styles/form.scss';\nimport '../../Styles/layout.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container></Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}